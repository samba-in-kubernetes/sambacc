# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import control_pb2 as control__pb2


class SambaControlStub(object):
    """--- define rpcs ---

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Info = channel.unary_unary(
                '/SambaControl/Info',
                request_serializer=control__pb2.InfoRequest.SerializeToString,
                response_deserializer=control__pb2.GeneralInfo.FromString,
                )
        self.Status = channel.unary_unary(
                '/SambaControl/Status',
                request_serializer=control__pb2.StatusRequest.SerializeToString,
                response_deserializer=control__pb2.StatusInfo.FromString,
                )
        self.CloseShare = channel.unary_unary(
                '/SambaControl/CloseShare',
                request_serializer=control__pb2.CloseShareRequest.SerializeToString,
                response_deserializer=control__pb2.CloseShareInfo.FromString,
                )
        self.KillClientConnection = channel.unary_unary(
                '/SambaControl/KillClientConnection',
                request_serializer=control__pb2.KillClientRequest.SerializeToString,
                response_deserializer=control__pb2.KillClientInfo.FromString,
                )


class SambaControlServicer(object):
    """--- define rpcs ---

    """

    def Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseShare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillClientConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SambaControlServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=control__pb2.InfoRequest.FromString,
                    response_serializer=control__pb2.GeneralInfo.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=control__pb2.StatusRequest.FromString,
                    response_serializer=control__pb2.StatusInfo.SerializeToString,
            ),
            'CloseShare': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseShare,
                    request_deserializer=control__pb2.CloseShareRequest.FromString,
                    response_serializer=control__pb2.CloseShareInfo.SerializeToString,
            ),
            'KillClientConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.KillClientConnection,
                    request_deserializer=control__pb2.KillClientRequest.FromString,
                    response_serializer=control__pb2.KillClientInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SambaControl', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SambaControl(object):
    """--- define rpcs ---

    """

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SambaControl/Info',
            control__pb2.InfoRequest.SerializeToString,
            control__pb2.GeneralInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SambaControl/Status',
            control__pb2.StatusRequest.SerializeToString,
            control__pb2.StatusInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseShare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SambaControl/CloseShare',
            control__pb2.CloseShareRequest.SerializeToString,
            control__pb2.CloseShareInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillClientConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SambaControl/KillClientConnection',
            control__pb2.KillClientRequest.SerializeToString,
            control__pb2.KillClientInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
